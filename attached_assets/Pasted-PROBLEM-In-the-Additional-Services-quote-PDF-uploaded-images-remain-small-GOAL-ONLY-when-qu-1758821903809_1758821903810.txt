PROBLEM
In the "Additional Services" quote PDF, uploaded images remain small.

GOAL (ONLY when quote_type == "Additional Services"):
- Images use the ORIGINAL uploaded files (not previews) and render ~full content width (~18cm), one per line.
- No heading above images.
- Other quote types unchanged.

STEP 0 — Show me the current code (for verification)
- Print the exact template snippet used to render images for Additional Services (the branch/partial).
- Print the CSS that applies to <img> in the PDF render (global + Additional Services scoped).
- State which PDF pipeline is used: (A) html2canvas+jsPDF (image-based) or (B) real HTML→PDF (Puppeteer/WeasyPrint).

STEP 1 — Remove layout caps (Additional Services only)
- Ensure images are NOT inside any grid/columns. Replace the wrapper with:
  <div id="as-images" class="pdf-images-as">
    {% for p in image_paths %}
      <img src="{{ p }}" class="pdf-image-as">
    {% endfor %}
  </div>
  (Use EJS/Pug equivalents if Node.)
- Delete/avoid these around the image block for this type: grid/grid-cols-*, row/col-*, flex-wrap thumbnails, w-1/4, max-w-xs, image-grid.

STEP 2 — Parent container fix (VERY IMPORTANT)
- Set the parent wrapper width (Additional Services only):
  .is-additional-services #as-images { width: 18cm; max-width: 100%; margin: 0 auto; }

STEP 3 — Hard override image size for PDF
- Use class + inline with !important to beat all prior rules:
  In the template, set: <img ... class="pdf-image-as" style="width:18cm!important;max-width:100%!important;height:auto!important;display:block!important;margin:6mm 0;page-break-inside:avoid!important;">
- Add scoped CSS (in PDF stylesheet loaded AFTER any global CSS):
  .is-additional-services .pdf-image-as { width: 18cm !important; max-width: 100% !important; height: auto !important; display:block !important; margin:6mm 0 !important; page-break-inside: avoid !important; }
  .is-additional-services img { max-width: none !important; } /* neutralize global caps */

STEP 4 — Nuke conflicting rules (scoped)
- Under .is-additional-services only, override or remove any rules like:
  img{max-width:160px}, .thumbnail, .image-grid img, .col-3 img, .w-1/4 img, .max-w-xs
- If Tailwind/Bootstrap classes are on the IMG, remove them in the Additional Services branch.

STEP 5 — Page width & margins
- Ensure content area can accept ~18cm:
  @page { size: A4; margin: 12mm; }
  .is-additional-services .pdf-content { width: 18cm; margin: 0 auto; }

STEP 6 — Pipeline-specific fix
- If using REAL HTML→PDF (Puppeteer/WeasyPrint): nothing extra; ensure the PDF CSS loads AFTER any screen CSS.
- If using IMAGE-BASED (html2canvas + jsPDF): increase render scale and set canvas to page width:
  html2canvas(el, { scale: 3, useCORS: true }).then(canvas => {
    const pageW = doc.internal.pageSize.getWidth();
    const m = 12; // points
    const w = pageW - m*2;
    const h = (canvas.height / canvas.width) * w;
    doc.addImage(canvas, 'PNG', m, m, w, h);
  });
  (This ensures whatever size in HTML becomes wide in the PDF page.)

STEP 7 — Keep other types untouched
- Do NOT change any image layout for non–Additional Services.

ACCEPTANCE (show results)
- With quote_type="Additional Services": each uploaded image spans ~full content width (~18cm), one per line; no heading; no 4-up grid.
- The PDF uses original uploaded files, not small previews.
- Repo-wide search confirms no grid/thumbnail classes wrap the AS image block.
- Provide concise diffs for: template, CSS, and (if applicable) html2canvas/jsPDF changes.
